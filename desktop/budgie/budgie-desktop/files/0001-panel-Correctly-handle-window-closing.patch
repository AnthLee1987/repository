From 8bd7a9a9364210fb3dcbddc087c795b4cff55d05 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey.doherty@gmail.com>
Date: Mon, 23 Jun 2014 12:51:02 +0100
Subject: [PATCH 1/7] panel: Correctly handle window closing

We previously didn't handle maximize state tracking for windows about to
close, therefore our max_count would never reset, and the panel would remain
dark until it had been restarted.
We now ensure we track the closing state, and the previous functionality
for obtaining our parent toplevel and notifiying the BudgiePanel instance
has been refactored into a private function.
---
 panel/icon-tasklist.c | 22 +++++++++++++++++++---
 1 file changed, 19 insertions(+), 3 deletions(-)

diff --git a/panel/icon-tasklist.c b/panel/icon-tasklist.c
index 098526d..f131a57 100644
--- a/panel/icon-tasklist.c
+++ b/panel/icon-tasklist.c
@@ -33,6 +33,8 @@ static void icon_tasklist_init(IconTasklist *self);
 static void icon_tasklist_dispose(GObject *object);
 
 /* Private functionality */
+static void update_toplevel(IconTasklist *self);
+
 static gboolean button_draw(GtkWidget *widget,
                             cairo_t *cr,
                             gpointer userdata);
@@ -248,6 +250,14 @@ static void window_closed(WnckScreen *screen,
         GtkWidget *menu;
         WnckWindow *bwindow;
 
+        /* Ugly but needs handling separately */
+        if (wnck_window_is_maximized_vertically(window)) {
+                if (self->max_count > 0) {
+                        self->max_count -= 1;
+                }
+                update_toplevel(self);
+        }
+
         /* If a buttons window matches the closing window, destroy the button */
         list = gtk_container_get_children(GTK_CONTAINER(self));
         for (elem = list; elem; elem = elem->next) {
@@ -336,11 +346,8 @@ static void window_update_state(WnckWindow *window,
                                 WnckWindowState new_state,
                                 gpointer userdata)
 {
-        BudgiePanel *toplevel = NULL;
         IconTasklist *self = ICON_TASKLIST(userdata);
 
-        toplevel = BUDGIE_PANEL(gtk_widget_get_toplevel(GTK_WIDGET(self)));
-
         if (new_state & WNCK_WINDOW_STATE_MINIMIZED &&
             new_state & WNCK_WINDOW_STATE_MAXIMIZED_VERTICALLY) {
                /* Reduce maximized count */
@@ -357,6 +364,15 @@ static void window_update_state(WnckWindow *window,
                         }
                 }
         }
+        update_toplevel(self);
+}
+
+static void update_toplevel(IconTasklist *self)
+{
+        BudgiePanel *toplevel = NULL;
+
+        toplevel = BUDGIE_PANEL(gtk_widget_get_toplevel(GTK_WIDGET(self)));
+
         /* If we have a single visible maximized window, we show "obscured" */
         if (self->max_count > 0) {
                 budgie_panel_set_view_obscured(toplevel, TRUE);
-- 
1.9.1

