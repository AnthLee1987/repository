From fca8c5659113321850057fc626afcbb8c079d393 Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey.doherty@gmail.com>
Date: Fri, 11 Jul 2014 00:44:45 +0100
Subject: [PATCH 17/22] budgie-session-dialog: Implement suspend support

---
 session/budgie-session-dialog.c | 29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)

diff --git a/session/budgie-session-dialog.c b/session/budgie-session-dialog.c
index b70f768..9abed12 100644
--- a/session/budgie-session-dialog.c
+++ b/session/budgie-session-dialog.c
@@ -60,6 +60,7 @@ static void budgie_session_dialog_init(BudgieSessionDialog *self)
         GtkStyleContext *style;
         gboolean can_reboot = FALSE;
         gboolean can_poweroff = FALSE;
+        gboolean can_suspend = FALSE;
         gboolean can_systemd = TRUE;
         autofree gchar *result = NULL;
         SdResponse response;
@@ -93,6 +94,18 @@ static void budgie_session_dialog_init(BudgieSessionDialog *self)
                         g_free(result);
                         result = NULL;
                 }
+                /* Can we suspend? */
+                if (!sd_login_manager_call_can_suspend_sync(self->proxy,
+                        &result, NULL, NULL)) {
+                        can_suspend = FALSE;
+                } else {
+                        response = get_response(result);
+                        if (response == SD_YES || response == SD_CHALLENGE) {
+                                can_suspend = TRUE;
+                        }
+                        g_free(result);
+                        result = NULL;
+                }
                 /* Can we shutdown? */
                 if (!sd_login_manager_call_can_power_off_sync(self->proxy,
                         &result, NULL, NULL)) {
@@ -152,6 +165,15 @@ static void budgie_session_dialog_init(BudgieSessionDialog *self)
                 gtk_widget_set_sensitive(GTK_WIDGET(button), FALSE);
         }
 
+        button = gtk_button_new_with_label("Suspend");
+        g_object_set_data(G_OBJECT(button), "action", "suspend");
+        g_signal_connect(button, "clicked", G_CALLBACK(clicked), self);
+        gtk_button_set_relief(GTK_BUTTON(button), GTK_RELIEF_NONE);
+        gtk_box_pack_start(GTK_BOX(layout), button, FALSE, FALSE, 0);
+        if (!can_suspend) {
+                gtk_widget_set_sensitive(GTK_WIDGET(button), FALSE);
+        }
+
         button = gtk_button_new_with_label("Poweroff");
         g_object_set_data(G_OBJECT(button), "action", "poweroff");
         g_signal_connect(button, "clicked", G_CALLBACK(clicked), self);
@@ -220,6 +242,13 @@ static void clicked(GtkWidget *button, gpointer userdata)
                         g_printerr("Unable to reboot!");
                         g_error_free(error);
                 }
+        } else if (g_str_equal(data, "suspend")) {
+                /* Suspend */
+                sd_login_manager_call_suspend_sync(self->proxy, TRUE, NULL, &error);
+                if (error) {
+                        g_printerr("Unable to suspend!");
+                        g_error_free(error);
+                }
         } else if (g_str_equal(data, "logout")) {
                 if (!g_spawn_command_line_async("budgie-session --logout", NULL)) {
                         g_message("Unable to logout!");
-- 
1.9.1

