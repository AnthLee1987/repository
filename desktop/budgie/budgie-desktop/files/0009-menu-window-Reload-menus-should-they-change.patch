From 5b6a742d609b141d39f4de1a81ceceb63a56c39c Mon Sep 17 00:00:00 2001
From: Ikey Doherty <ikey.doherty@gmail.com>
Date: Thu, 10 Jul 2014 00:10:02 +0100
Subject: [PATCH 09/22] menu-window: Reload menus should they change

GMenuTree automatically monitors the known application files directories
for changes, i.e. a user has removed, updated or installed a software
package. In this instance we now reload our contents dynamically so
that the budgie-panel process no longer needs to be restarted.
---
 panel/applets/menu-window.c | 27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

diff --git a/panel/applets/menu-window.c b/panel/applets/menu-window.c
index b6b8fb6..d6d2e67 100644
--- a/panel/applets/menu-window.c
+++ b/panel/applets/menu-window.c
@@ -51,6 +51,8 @@ static void changed_cb(GtkWidget *widget, gpointer userdata);
 static void activate_cb(GtkWidget *widget, gpointer userdata);
 static void logout_cb(GtkWidget *widget, gpointer userdata);
 
+static void menu_changed(GMenuTree *tree, gpointer userdata);
+
 /* Consider splitting into a panel-util helper */
 static gboolean string_contains(const gchar *string, const gchar *term);
 
@@ -226,6 +228,8 @@ static void populate_menu(MenuWindow *self, GMenuTreeDirectory *directory)
                         GMENU_TREE_FLAGS_SORT_DISPLAY_NAME);
                 self->priv->tree = tree;
 
+                g_signal_connect(tree, "changed", G_CALLBACK(menu_changed), self);
+
                 gmenu_tree_load_sync(tree, &error);
                 if (error) {
                         g_warning("Failed to load menu: %s\n",
@@ -473,3 +477,26 @@ static void logout_cb(GtkWidget *widget, gpointer userdata)
                 g_message("Unable to spawn session dialog!");
         }
 }
+
+static void menu_changed(GMenuTree *tree, gpointer userdata)
+{
+        GList *kids, *elem;
+        MenuWindow *self = MENU_WINDOW(userdata);
+
+        /* Remove all of the applications in the list box */
+        kids = gtk_container_get_children(GTK_CONTAINER(self->priv->app_box));
+        for (elem = kids; elem != NULL; elem = elem->next) {
+                gtk_widget_destroy(GTK_WIDGET(elem->data));
+        }
+
+        /* Remove everything but the "all" button in the categories */
+        kids = gtk_container_get_children(GTK_CONTAINER(self->priv->group_box));
+        for (elem = kids; elem != NULL; elem = elem->next) {
+                if (elem->data != self->priv->all_button) {
+                        gtk_widget_destroy(GTK_WIDGET(elem->data));
+                }
+        }
+
+        /* We're done - reload menus */
+        populate_menu(self, NULL);
+}
-- 
1.9.1

